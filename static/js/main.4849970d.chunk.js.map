{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","setState","prevState","sortByAlphabet","sortByLength","reset","this","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEH,QAAU,WACR,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1Bd,YAAac,EAAUd,gBAR7B,EAYEe,eAAiB,WACf,EAAKF,SAAS,CAAEd,SAAUJ,EAASU,YAbvC,EAgBEW,aAAe,WACb,EAAKH,SAAS,CAAEd,SAAUJ,EAASY,UAjBvC,EAoBEU,MAAQ,WACN,EAAKJ,SAAS,CAAEb,YAAY,EAAOD,SAAUJ,EAASiB,QArB1D,4CAwBE,WACE,MAAiCM,KAAKP,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaJ,EAASU,WAEtCiB,QAASJ,KAAKH,eANhB,iCAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaJ,EAASY,SAEtCe,QAASJ,KAAKF,aANhB,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,aAAcrB,IAElBsB,QAASJ,KAAKT,QANhB,sBAWEV,IAAaJ,EAASiB,MAAQZ,IAE5B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,MAHhB,sBAYN,6BACE,6BACGpB,EACCD,EACA,CAAEG,WAAUC,eACZuB,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAR,sBAlFlD,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4849970d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning',\n              { ' is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              { sortType, isReversed },\n            ).map(good => (<li data-cy=\"Good\" key=\"good\">{good}</li>))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}